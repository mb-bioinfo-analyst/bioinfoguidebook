{
  "hash": "2e06c785c9d411b91dec842f1545e8de",
  "result": {
    "markdown": "---\ntitle: \"Best Practices for Data Wrangling in R - Part 2\"\nauthor: \"Bilal Mustafa\"\ndate: \"2023-09-21\"\ncategories: [R, Data wrangling, File Reading]\nimage: \"image.jpg\"\nexecute: \n  output: true\n  echo: fenced\n  warning: false\n  error: false\nformat:\n  html:\n    code-link: true\n    df-print: paged\n    code-copy: true\n---\n\n\n## Introduction:\n\nData wrangling is a crucial step in the data analysis process, and R provides a powerful set of tools and packages to help you clean, transform, and prepare your data for analysis.\nIn this blog post, we will explore some best practices for effective data wrangling in R.\nWhether you are a beginner or an experienced data analyst, these tips will help you streamline your data preparation workflow and ensure the reliability of your analysis.\n\nNow continuing from the previous post (Best Practices for Data Wrangling in R - Part 1), we will use the airquality data from datasets library to further understand how data wrangling helps us to get the deeper and significant insights of our data.\n\n------------------------------------------------------------------------\n\n## **Reading Data**\n\n### Raw Input Data\n\nFirstly read your data into R.\nFor this exercise I will be using a simulated dataset.\n\n\n::: {.cell}\n\n````{.cell-code}\n```{{r}}\nlibrary(datasets)\n\ndata(airquality)\n```\n````\n:::\n\n\n------------------------------------------------------------------------\n\n## **Understand Your Data**\n\nIt's imperative to have a thorough understanding of your dataset before getting started with data wrangling.\nKnowing your data's structure, the significance of each variable, and any potential problems or abnormalities is part of this.\nTo obtain an understanding of the data you're working with, start by analyzing it using functions like `head()`, `summary()`, and `str()`.\n\n\n::: {.cell}\n\n````{.cell-code}\n```{{r}}\n# Example: Inspect the first few rows of a dataset\nhead(airquality)\n```\n````\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"\"],\"name\":[\"_rn_\"],\"type\":[\"\"],\"align\":[\"left\"]},{\"label\":[\"Ozone\"],\"name\":[1],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"Solar.R\"],\"name\":[2],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"Wind\"],\"name\":[3],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Temp\"],\"name\":[4],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"Month\"],\"name\":[5],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"Day\"],\"name\":[6],\"type\":[\"int\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"41\",\"2\":\"190\",\"3\":\"7.4\",\"4\":\"67\",\"5\":\"5\",\"6\":\"1\",\"_rn_\":\"1\"},{\"1\":\"36\",\"2\":\"118\",\"3\":\"8.0\",\"4\":\"72\",\"5\":\"5\",\"6\":\"2\",\"_rn_\":\"2\"},{\"1\":\"12\",\"2\":\"149\",\"3\":\"12.6\",\"4\":\"74\",\"5\":\"5\",\"6\":\"3\",\"_rn_\":\"3\"},{\"1\":\"18\",\"2\":\"313\",\"3\":\"11.5\",\"4\":\"62\",\"5\":\"5\",\"6\":\"4\",\"_rn_\":\"4\"},{\"1\":\"NA\",\"2\":\"NA\",\"3\":\"14.3\",\"4\":\"56\",\"5\":\"5\",\"6\":\"5\",\"_rn_\":\"5\"},{\"1\":\"28\",\"2\":\"NA\",\"3\":\"14.9\",\"4\":\"66\",\"5\":\"5\",\"6\":\"6\",\"_rn_\":\"6\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n::: {.cell}\n\n````{.cell-code}\n```{{r}}\n# Example: Get a summary of the dataset\nsummary(airquality)\n```\n````\n\n::: {.cell-output .cell-output-stdout}\n```\n     Ozone           Solar.R           Wind             Temp      \n Min.   :  1.00   Min.   :  7.0   Min.   : 1.700   Min.   :56.00  \n 1st Qu.: 18.00   1st Qu.:115.8   1st Qu.: 7.400   1st Qu.:72.00  \n Median : 31.50   Median :205.0   Median : 9.700   Median :79.00  \n Mean   : 42.13   Mean   :185.9   Mean   : 9.958   Mean   :77.88  \n 3rd Qu.: 63.25   3rd Qu.:258.8   3rd Qu.:11.500   3rd Qu.:85.00  \n Max.   :168.00   Max.   :334.0   Max.   :20.700   Max.   :97.00  \n NA's   :37       NA's   :7                                       \n     Month            Day      \n Min.   :5.000   Min.   : 1.0  \n 1st Qu.:6.000   1st Qu.: 8.0  \n Median :7.000   Median :16.0  \n Mean   :6.993   Mean   :15.8  \n 3rd Qu.:8.000   3rd Qu.:23.0  \n Max.   :9.000   Max.   :31.0  \n                               \n```\n:::\n:::\n\n::: {.cell}\n\n````{.cell-code}\n```{{r}}\n# Example: Display the structure of the dataset\nstr(airquality)\n```\n````\n\n::: {.cell-output .cell-output-stdout}\n```\n'data.frame':\t153 obs. of  6 variables:\n $ Ozone  : int  41 36 12 18 NA 28 23 19 8 NA ...\n $ Solar.R: int  190 118 149 313 NA NA 299 99 19 194 ...\n $ Wind   : num  7.4 8 12.6 11.5 14.3 14.9 8.6 13.8 20.1 8.6 ...\n $ Temp   : int  67 72 74 62 56 66 65 59 61 69 ...\n $ Month  : int  5 5 5 5 5 5 5 5 5 5 ...\n $ Day    : int  1 2 3 4 5 6 7 8 9 10 ...\n```\n:::\n:::\n\n\nThis will help you make informed decisions during the wrangling process.\n\n------------------------------------------------------------------------\n\n## **Data Cleaning**\n\nData cleaning involves checking the headers, handling missing values, outliers, and errors in your dataset.\nHere are some best practices for data cleaning in R:\n\n### **Handle Missing Values:**\n\n-   Identify missing values using functions like `is.na()` or `complete.cases()`.\n\n-   Decide whether to impute missing values, remove rows with missing data, or keep them, depending on the context.\n\n-   Use packages like `dplyr` or `tidyr` to perform missing data operations.\n\n\n::: {.cell}\n\n````{.cell-code}\n```{{r}}\nlibrary(dplyr)\nlibrary(tidyr)\n\n# Example: Remove rows with missing values\nairquality_clean <- na.omit(airquality)\n\nhead(airquality_clean)\n```\n````\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"\"],\"name\":[\"_rn_\"],\"type\":[\"\"],\"align\":[\"left\"]},{\"label\":[\"Ozone\"],\"name\":[1],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"Solar.R\"],\"name\":[2],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"Wind\"],\"name\":[3],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Temp\"],\"name\":[4],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"Month\"],\"name\":[5],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"Day\"],\"name\":[6],\"type\":[\"int\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"41\",\"2\":\"190\",\"3\":\"7.4\",\"4\":\"67\",\"5\":\"5\",\"6\":\"1\",\"_rn_\":\"1\"},{\"1\":\"36\",\"2\":\"118\",\"3\":\"8.0\",\"4\":\"72\",\"5\":\"5\",\"6\":\"2\",\"_rn_\":\"2\"},{\"1\":\"12\",\"2\":\"149\",\"3\":\"12.6\",\"4\":\"74\",\"5\":\"5\",\"6\":\"3\",\"_rn_\":\"3\"},{\"1\":\"18\",\"2\":\"313\",\"3\":\"11.5\",\"4\":\"62\",\"5\":\"5\",\"6\":\"4\",\"_rn_\":\"4\"},{\"1\":\"23\",\"2\":\"299\",\"3\":\"8.6\",\"4\":\"65\",\"5\":\"5\",\"6\":\"7\",\"_rn_\":\"7\"},{\"1\":\"19\",\"2\":\"99\",\"3\":\"13.8\",\"4\":\"59\",\"5\":\"5\",\"6\":\"8\",\"_rn_\":\"8\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\nOther methods to remove NA's include `na.omit()` , `complete.cases()`, `rowSums()`, `drop_na()`, and `filter()`.\n\n\n::: {.cell}\n\n````{.cell-code}\n```{{r}}\n# #Remove rows with NA's using na.omit()\n# airquality_clean <- na.omit(airquality)\n# \n# #Remove rows with NA's using complete.cases\n# airquality_clean <- airquality[complete.cases(airquality),]\n# \n# #Remove rows with NA's using rowSums()\n# airquality_clean <- airquality[rowSums(is.na(airquality)) == 0,]\n# \n# #Import the tidyr package\n# library(\"tidyr\")\n# \n# #Remove rows with NA's using drop_na()\n# airquality_clean <- airquality %>% drop_na()\n# \n# #Remove rows that contains all NA's\n# airquality_clean <-\n#   airquality[rowSums(is.na(airquality)) != ncol(airquality),]\n# \n# #Load the dplyr package\n# library(\"dplyr\")\n# \n# #Remove rows that contains all NA's\n# airquality_clean <-\n#   filter(airquality, rowSums(is.na(airquality)) != ncol(airquality))\n# \n# airquality_clean <- airquality %>% filter(!is.na(Ozone))\n```\n````\n:::\n\n\n------------------------------------------------------------------------\n\n### **Manage Outliers**\n\n-   Visualize data using boxplots, histograms, or scatter plots to detect outliers.\n\n-   Consider using statistical methods or domain knowledge to handle outliers, such as winsorization or transformation.\n\n\n::: {.cell}\n\n````{.cell-code}\n```{{r}}\n# Example: Visualize outliers using a boxplot\nboxplot(airquality_clean)\n\n\n# # Remove outliers from the 'income' variable\n# airquality_clean <- airquality_clean %>%\n#   filter(Ozone >= 0)\n```\n````\n\n::: {.cell-output-display}\n![](datawrangle2_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\n### **Correct Errors**\n\n-   Check for data entry errors and inconsistencies.\n\n-   Use data validation rules or regular expressions to identify and correct errors.\n\n------------------------------------------------------------------------\n\n## **Data Transformation**\n\nTo make your data acceptable for analysis, you must shape and reformat it through data transformation.\nThe following are a few excellent practices for R's data transformation:\n\n### **Use Tidy Data Principles**\n\n-   Follow the principles of tidy data, where each variable is a column, each observation is a row, and each type of observational unit is a table.\n\n-   The `tidyr` package provides functions like `gather()` and `spread()` for reshaping data.\n\n\n::: {.cell}\n\n````{.cell-code}\n```{{r}}\n# # Example: Convert data from wide to long format\nairquality_clean_long <- airquality_clean %>%\n  gather(key = \"Column_name\", value = \"value\")   \n\nhead(airquality_clean_long)\n```\n````\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"\"],\"name\":[\"_rn_\"],\"type\":[\"\"],\"align\":[\"left\"]},{\"label\":[\"Column_name\"],\"name\":[1],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"value\"],\"name\":[2],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"Ozone\",\"2\":\"41\",\"_rn_\":\"1\"},{\"1\":\"Ozone\",\"2\":\"36\",\"_rn_\":\"2\"},{\"1\":\"Ozone\",\"2\":\"12\",\"_rn_\":\"3\"},{\"1\":\"Ozone\",\"2\":\"18\",\"_rn_\":\"4\"},{\"1\":\"Ozone\",\"2\":\"23\",\"_rn_\":\"5\"},{\"1\":\"Ozone\",\"2\":\"19\",\"_rn_\":\"6\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\n### **Apply Data Type Conversions**\n\n-   Ensure that variables have the correct data types (e.g., numeric, character, factor) for analysis.\n\n-   Use functions like **`as.numeric()`**, **`as.character()`**, or **`as.factor()`** to convert data types.\n\n\n::: {.cell}\n\n````{.cell-code}\n```{{r}}\n# Example: Convert a variable to numeric\nairquality_clean$Temp_numeric <- as.numeric(airquality_clean$Temp) \n\nhead(airquality_clean)\n```\n````\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"\"],\"name\":[\"_rn_\"],\"type\":[\"\"],\"align\":[\"left\"]},{\"label\":[\"Ozone\"],\"name\":[1],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"Solar.R\"],\"name\":[2],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"Wind\"],\"name\":[3],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Temp\"],\"name\":[4],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"Month\"],\"name\":[5],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"Day\"],\"name\":[6],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"Temp_numeric\"],\"name\":[7],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"41\",\"2\":\"190\",\"3\":\"7.4\",\"4\":\"67\",\"5\":\"5\",\"6\":\"1\",\"7\":\"67\",\"_rn_\":\"1\"},{\"1\":\"36\",\"2\":\"118\",\"3\":\"8.0\",\"4\":\"72\",\"5\":\"5\",\"6\":\"2\",\"7\":\"72\",\"_rn_\":\"2\"},{\"1\":\"12\",\"2\":\"149\",\"3\":\"12.6\",\"4\":\"74\",\"5\":\"5\",\"6\":\"3\",\"7\":\"74\",\"_rn_\":\"3\"},{\"1\":\"18\",\"2\":\"313\",\"3\":\"11.5\",\"4\":\"62\",\"5\":\"5\",\"6\":\"4\",\"7\":\"62\",\"_rn_\":\"4\"},{\"1\":\"23\",\"2\":\"299\",\"3\":\"8.6\",\"4\":\"65\",\"5\":\"5\",\"6\":\"7\",\"7\":\"65\",\"_rn_\":\"7\"},{\"1\":\"19\",\"2\":\"99\",\"3\":\"13.8\",\"4\":\"59\",\"5\":\"5\",\"6\":\"8\",\"7\":\"59\",\"_rn_\":\"8\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\n------------------------------------------------------------------------\n\n## **Data Validation**\n\nTo ensure that your processed data satisfies the criteria of your study, validation is a crucial stage in the data wrangling process.\nHere are a few guidelines for using R's data validation features.\n\n### **Perform Sanity Checks**\n\n-   Check summary statistics, distributions, and relationships between variables to ensure they align with your expectations.\n\n\n::: {.cell}\n\n````{.cell-code}\n```{{r}}\n# Example: Check summary statistics\nsummary(airquality_clean)\n```\n````\n\n::: {.cell-output .cell-output-stdout}\n```\n     Ozone          Solar.R           Wind            Temp      \n Min.   :  1.0   Min.   :  7.0   Min.   : 2.30   Min.   :57.00  \n 1st Qu.: 18.0   1st Qu.:113.5   1st Qu.: 7.40   1st Qu.:71.00  \n Median : 31.0   Median :207.0   Median : 9.70   Median :79.00  \n Mean   : 42.1   Mean   :184.8   Mean   : 9.94   Mean   :77.79  \n 3rd Qu.: 62.0   3rd Qu.:255.5   3rd Qu.:11.50   3rd Qu.:84.50  \n Max.   :168.0   Max.   :334.0   Max.   :20.70   Max.   :97.00  \n     Month            Day         Temp_numeric  \n Min.   :5.000   Min.   : 1.00   Min.   :57.00  \n 1st Qu.:6.000   1st Qu.: 9.00   1st Qu.:71.00  \n Median :7.000   Median :16.00   Median :79.00  \n Mean   :7.216   Mean   :15.95   Mean   :77.79  \n 3rd Qu.:9.000   3rd Qu.:22.50   3rd Qu.:84.50  \n Max.   :9.000   Max.   :31.00   Max.   :97.00  \n```\n:::\n:::\n\n\n### **Validate Data Integrity**\n\n-   Verify that data transformations have not introduced errors.\n\n-   Compare original and transformed data to identify discrepancies.\n\n### **Document Your Steps**\n\nFor reproducibility and collaboration, it's essential to record your data manipulation procedures.\nTo write a narrative that details the choices you made while handling the data, think about utilizing R Markdown or Jupyter Notebooks.\nMake your work accessible and understandable to others by using code comments, explanations, and visualizations.\n\n------------------------------------------------------------------------\n\n## **Conclusion**\n\nA crucial first step in data analysis is data wrangling; by using R's best practices, you can speed up the process and guarantee the accuracy of your findings.\nYou may improve the efficiency of your data wrangling workflow and provide more reliable analyses by comprehending your data, putting effective cleaning and transformation strategies into practice, testing your findings, and documenting your approach.\n\nAlways tailor these best practices to your unique needs, keeping in mind that the individual methods and packages you use may vary depending on your dataset and research goals.\n",
    "supporting": [
      "datawrangle2_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../../site_libs/pagedtable-1.1/css/pagedtable.css\" rel=\"stylesheet\" />\r\n<script src=\"../../site_libs/pagedtable-1.1/js/pagedtable.js\"></script>\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}